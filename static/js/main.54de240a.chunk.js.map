{"version":3,"sources":["components/ReactDayPicker.js","components/CreateForm.js","components/PostPreview.js","components/CreatePost.js","components/Homepage.js","components/Filter.js","components/Post.js","components/PostListItem.js","components/PostList.js","components/Search.js","components/Body.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ReactDayPicker","props","useState","Date","setDate","onDayChange","date","onChange","console","log","getTime","CreateForm","title","setTitle","image","setImage","category","setCategory","zip","setZip","description","setDescription","startDate","setStartDate","endDate","setEndDate","city","setCity","postData","useEffect","populatePost","update","postdate","className","type","event","target","value","onClick","submit","Post","JSON","stringify","src","CreatePost","post","setPost","add","Homepage","Filter","data","keyword","setKeyword","filterData","filterList","addCurrentItems","cur","Object","keys","map","key","addOnePair","hasOwnProperty","includes","buildFilters","zipList","cityList","catList","generateOption","updateKeyword","updateZip","updateStartDate","updateEndDate","updateCity","updateCategory","newData","isItemInFilter","kwPresent","cityPresent","zipPresent","categoryPresent","afterStartDate","beforeEndDate","testKeyword","toLowerCase","testStartDate","testEndDate","testCity","testZip","testCategory","dataTitle","dataDescription","currentDate","currentCity","currentZip","currentCategory","id","name","placeholder","unshift","PostListItem","changeDisplayPost","listNum","active","PostList","chosen","setChosen","handleClick","Search","setPostData","setData","reset","postNum","Body","require","element","getMaxId","maxId","parseInt","content","item","goToSearch","Header","style","cursor","showHomepage","showSearch","buttonStart","showCreate","App","setContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54de240a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\n\r\nexport default function ReactDayPicker(props) {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  function onChange(date) {\r\n    setDate(date);\r\n    props.onChange(date);\r\n    console.log(date.getTime()/1000);\r\n  }\r\n\r\n  return <DayPickerInput onDayChange={onChange} />;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ReactDayPicker from './ReactDayPicker';\r\n\r\nexport default function CreateForm(props) {\r\n  const [title,setTitle] = useState(\"\");\r\n  const [image,setImage] = useState(\"\");\r\n  const [category,setCategory] = useState(\"\");\r\n  const [zip,setZip] = useState(\"\");\r\n  const [description,setDescription] = useState(\"\");\r\n  const [startDate,setStartDate] = useState(\"\");\r\n  const [endDate,setEndDate] = useState(\"\");\r\n  const [city,setCity] = useState(\"\");\r\n  let postData = {};\r\n  useEffect(() => {\r\n    populatePost();\r\n    props.update(postData);\r\n  },[title,image,category,zip,description,startDate,endDate,city])\r\n  const updateZip = (event) => {\r\n    setZip(event.target.value);\r\n  }\r\n  const updateStartDate = (date) => {\r\n    setStartDate(date.getTime()/1000);\r\n  }  \r\n  const updateEndDate = (date) => {\r\n    setEndDate(date.getTime()/1000);\r\n\r\n  }\r\n  const updateCity = (event) => {\r\n    setCity(event.target.value);\r\n\r\n  }\r\n  const updateCategory = (event) => {\r\n    setCategory(event.target.value);\r\n  }\r\n\r\n  const updateDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  const updateTitle = (event) => {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  const updateImage = (event) => {\r\n    setImage(event.target.value);\r\n  }\r\n\r\n  const populatePost = () => {\r\n    postData.title = title;\r\n    postData.image = image;\r\n    postData.category = category;\r\n    postData.zip = zip;\r\n    postData.description = description;\r\n    postData.startDate = startDate;\r\n    postData.endDate = endDate\r\n    postData.city = city;\r\n    postData.postdate = new Date().getTime() / 1000;\r\n  }\r\n  const handleClick = (event) => {\r\n    props.submit()\r\n  }\r\n  return (\r\n    <div className=\"flex items-center justify-center h-9-10 bg-gray-600 text-gray-200 font-semibold border border-gray-400 rounded shadow-xl mx-3\">\r\n      <form className=\"grid-rows-8\">\r\n        <div className='my-3'>\r\n          <label>\r\n            Post Title:\r\n            <input\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              type=\"text\"\r\n              onChange={updateTitle}/>\r\n          </label>\r\n        </div>\r\n        <div className='my-3'>\r\n          <label>\r\n            Image Url:\r\n            <input\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              type=\"text\"\r\n              onChange={updateImage}/>\r\n          </label>\r\n        </div>\r\n        <div className='my-3'>\r\n          <label>\r\n            Category:\r\n            <input\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              type=\"text\"\r\n              onChange={updateCategory}/>\r\n          </label>\r\n        </div>\r\n        <div className='my-3'>\r\n          <label>\r\n            Zipcode:\r\n            <input\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              type=\"text\"\r\n              onChange={updateZip}/>\r\n          </label>\r\n        </div>\r\n        <div className='my-3'>\r\n          <label>\r\n            City:\r\n            <input\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              type=\"text\"\r\n              onChange={updateCity}/>\r\n          </label>\r\n        </div>\r\n        <div className='my-3'>\r\n          <label>\r\n            Description:\r\n            <textarea\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              onChange={updateDescription}/>            \r\n          </label>\r\n        </div>\r\n        <div className=\"my-1\">\r\n          <label>Start Date:\r\n            <ReactDayPicker key={\"start\"} onChange={updateStartDate}/>\r\n          </label>\r\n        </div>\r\n        <div className=\"my-3\">\r\n          <label>End Date:\r\n            <ReactDayPicker key={\"end\"} onChange={updateEndDate}/>\r\n          </label>\r\n        </div>\r\n      </form>\r\n      <button className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow my-3\" onClick={ () => {\r\n          handleClick()\r\n          }}>\r\n          Submit\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Post(props) {\r\n  let element = \"\";\r\n  if(JSON.stringify(props.postData) == JSON.stringify({})){\r\n    element =     \r\n    <div className='col-span-8 bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl'>\r\n      Post\r\n    </div>\r\n  }else{\r\n    element = \r\n    <div className='h-9-10 bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl'>\r\n      <div>{props.postData.title}</div>\r\n      <img\r\n        className=\"w-3/6 myl-25\"\r\n        src={props.postData.image}/>\r\n      <p>{props.postData.description}</p>\r\n    </div>\r\n  }\r\n  return (\r\n    element\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport CreateForm from './CreateForm';\r\nimport PostPreview from './PostPreview';\r\n\r\nexport default function CreatePost(props) {\r\n  const [title,setTitle] = useState(\"\");\r\n  const [post,setPost] = useState({\r\n    \"title\": \"\",\r\n    \"image\": \"\",\r\n    \"zip\" : \"\",\r\n    \"city\" : \"\",\r\n    \"category\" : \"\",\r\n    \"postdate\" : \"\",\r\n    \"startdate\" : \"\",\r\n    \"enddate\" : \"\",\r\n    \"description\" : \"\"\r\n  });\r\n\r\n  const updatePreview = (post) => {\r\n    setPost(post);\r\n    console.log(post);\r\n  }\r\n  const submit = () => {\r\n    props.add(post);\r\n  }\r\n  return (\r\n    <div className='grid grid-cols-2 h-9-10'>\r\n      <CreateForm update={updatePreview} submit={submit}/>\r\n      <div className='h-9-10'>\r\n        <p className=\"h-1-10\">POST PREVIEW</p>\r\n        <PostPreview postData={post}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Homepage() {\r\n  return (\r\n    <div>\r\n      Homepage\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport ReactDayPicker from './ReactDayPicker';\r\n\r\nexport default function Filter(props) {\r\n  const [data,setData] = useState(props.data);\r\n  const [zip, setZip] = useState(\"All\");\r\n  const [keyword, setKeyword] = useState(null);\r\n  const [category,setCategory] = useState(\"All\");\r\n  const [city,setCity] = useState(\"All\");\r\n  const [startDate,setStartDate] = useState(null);\r\n  const [endDate,setEndDate] = useState(null);\r\n  useEffect(() => {\r\n    filterData(data);\r\n  },[keyword,zip,category,city,startDate,endDate]);//Only filter data on changes to the states\r\n  let filterList = {};\r\n  const buildFilters = (data) => {\r\n    Object.keys(data).map((key) => {\r\n      addCurrentItems(data[key]);\r\n    })\r\n  }\r\n  const addCurrentItems = (cur) => {\r\n    Object.keys(cur).map((key) => {\r\n      addOnePair(key,cur[key]);\r\n    })\r\n  }\r\n  const addOnePair = (key,value) => {\r\n    if(filterList.hasOwnProperty(key)){\r\n      if(!filterList[key].includes(value)){\r\n        filterList[key] = [...filterList[key],...[value]];\r\n      }\r\n    }else{\r\n      filterList[key] = [value];\r\n    }\r\n  }\r\n  buildFilters(props.data);\r\n  const generateOption = (data) => {\r\n    return <option>{data}</option>;\r\n  }\r\n  const generateCategories = (catList) => {\r\n    catList.unshift(\"All\");\r\n    return  <div className=\"my-1\"><label>Category:\r\n              <select className='text-black' onChange={updateCategory}>\r\n                {catList.map(generateOption)}\r\n              </select>\r\n            </label></div>;\r\n  }\r\n  const generateKeyword = () => {\r\n  return  <div className=\"my-1\"><label>Keyword:\r\n            <input\r\n              className=\"bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl\"\r\n              name='keyword'\r\n              type='text'\r\n              placeholder=\"Type Keywords...\"\r\n              onChange={updateKeyword}/>\r\n            </label></div>;\r\n  }\r\n  const generateCities = (cityList) => {\r\n    cityList.unshift(\"All\");\r\n    return  <div className=\"my-1\"><label>City:\r\n              <select className='text-black' onChange={updateCity}>\r\n                {cityList.map(generateOption)}\r\n              </select>\r\n            </label></div>;\r\n  }\r\n  const generateStartDate = () => {\r\n    return  <div className=\"my-1\"><label>Start Date:\r\n              <ReactDayPicker key={\"start\"} onChange={updateStartDate}/>\r\n            </label></div>\r\n  }\r\n  const generateEndDate = () => {\r\n    return  <div className=\"my-1\"><label>End Date:\r\n              <ReactDayPicker key={\"end\"} onChange={updateEndDate}/>\r\n            </label></div>\r\n  }\r\n  const generateZips = (zipList) => {\r\n    zipList.unshift(\"All\")\r\n    return  <div className=\"my-1\"><label>Zipcode:\r\n              <select className='text-black' onChange={updateZip}>\r\n                {zipList.map(generateOption)}\r\n              </select>\r\n            </label>\r\n            </div>\r\n  }\r\n  const updateKeyword = (event) =>{\r\n    setKeyword(event.target.value);\r\n  }\r\n  const updateZip = (event) => {\r\n    setZip(event.target.value);\r\n  }\r\n  const updateStartDate = (date) => {\r\n    setStartDate(date.getTime()/1000);\r\n  }  \r\n  const updateEndDate = (date) => {\r\n    setEndDate(date.getTime()/1000);\r\n\r\n  }\r\n  const updateCity = (event) => {\r\n    setCity(event.target.value);\r\n\r\n  }\r\n  const updateCategory = (event) => {\r\n    setCategory(event.target.value);\r\n  }\r\n\r\n  const filterData = (data) => {\r\n    console.log(\"kw = \" + keyword)\r\n    console.log(\"City = \" + city)\r\n    let newData = {};\r\n    Object.keys(data).map((key) => {\r\n      if(isItemInFilter(data[key])){\r\n        newData[key] = data[key];\r\n      }\r\n    })\r\n    props.update(newData);\r\n  }\r\n\r\n  const isItemInFilter = (data) => {\r\n    let kwPresent = true;\r\n    let cityPresent = true;\r\n    let zipPresent = true;\r\n    let categoryPresent = true;\r\n    let datePresent = true;\r\n    let afterStartDate = true;\r\n    let beforeEndDate = true;\r\n    if(keyword != null){\r\n      kwPresent = testKeyword(keyword.toLowerCase(),data.title.toLowerCase(),data.description.toLowerCase());\r\n    }\r\n    if(startDate != null){\r\n      afterStartDate = testStartDate(data.postdate);\r\n    }\r\n    if(endDate != null){\r\n      beforeEndDate = testEndDate(data.postdate);\r\n    }\r\n    if(city != \"All\"){\r\n      cityPresent = testCity(data.city);\r\n    }\r\n    if(zip != \"All\"){\r\n      zipPresent = testZip(data.zip);\r\n    }\r\n    if(category != \"All\"){\r\n      categoryPresent = testCategory(data.category);\r\n    }\r\n    return kwPresent && cityPresent && zipPresent && categoryPresent && afterStartDate && beforeEndDate;\r\n  }\r\n  const testKeyword = (keyword,dataTitle,dataDescription) => {\r\n    if(dataTitle.includes(keyword) || dataDescription.includes(keyword)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const testStartDate = (currentDate) => {\r\n    if(currentDate >= startDate){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const testEndDate = (currentDate) => {\r\n    if(currentDate <= endDate){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  const testCity = (currentCity) => {\r\n    if(currentCity.toLowerCase() == city.toLowerCase()){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const testZip = (currentZip) => {\r\n    if(currentZip == zip){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const testCategory = (currentCategory) => {\r\n    if (currentCategory.toLowerCase() == category.toLowerCase()){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return (\r\n    <div className=\"col-span-2 bg-gray-600 text-gray-200 font-semibold border border-gray-400 rounded shadow-xl mx-3 align-baseline flex items-center\">\r\n      <form id=\"filter\" className='my-2 grid-rows-8 text-center'>\r\n        {generateKeyword()}\r\n        {generateCategories(filterList.category)}\r\n        {generateCities(filterList.city)}\r\n        {generateZips(filterList.zip)}\r\n        {generateStartDate()}\r\n        {generateEndDate()}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Post(props) {\r\n  let element = \"\";\r\n  if(JSON.stringify(props.postData) == JSON.stringify({})){\r\n    element =     \r\n    <div className='col-span-8 bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl'>\r\n      Post\r\n    </div>\r\n  }else{\r\n    element = \r\n    <div className='col-span-8 bg-white text-gray-800 font-semibold border border-gray-400 rounded shadow-xl'>\r\n      <div>{props.postData.title}</div>\r\n      <img\r\n        className=\"w-3/6 myl-25\"\r\n        src={props.postData.image}/>\r\n      <p>{props.postData.description}</p>\r\n    </div>\r\n  }\r\n  return (\r\n    element\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PostListItem(props) {\r\n  const handleClick = () => {\r\n    props.changeDisplayPost(props.listNum);\r\n    props.onClick(props.listNum)\r\n  }\r\n  return (\r\n    <div onClick={handleClick} className={`bg-white hover:not(.active)bg-gray-100 border border-gray-400 rounded shadow-xl my-1 mx-1 post-item  ${props.active ? \"active\" : \"\"}`}>\r\n      <p className=\"text-gray-800 post-title\">\r\n        {props.data.title}\r\n      </p>\r\n      <p className=\"text-xs text-gray-300 post-city text-right px-2\">\r\n      {props.data.city}, FL\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport PostListItem from './PostListItem';\r\n\r\nexport default function PostList(props) {\r\n  const [chosen,setChosen] = useState();\r\n  const handleClick = (key) => {\r\n    if(key == chosen){\r\n      setChosen(\"\");\r\n    }else{\r\n      setChosen(key);\r\n    }\r\n  }\r\n  return (\r\n    <div className='col-span-2 grid-rows-8 bg-gray-600 border border-gray-400 rounded shadow-xl mx-2'>\r\n      {Object.keys(props.data).map((key) => \r\n        <PostListItem \r\n          data={props.data[key]}\r\n          key={key}\r\n          listNum={key}\r\n          active={key === chosen}\r\n          changeDisplayPost={props.changeDisplayPost}\r\n          onClick={handleClick}/>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Filter from './Filter'\r\nimport Post from './Post'\r\nimport PostList from './PostList'\r\n\r\nexport default function Search(props) {\r\n  const [postData, setPostData] = useState({});\r\n  const [data, setData] = useState(props.data);\r\n  const changeDisplayPost = (postNum) => {\r\n    if(postData == props.data[postNum]){\r\n      setPostData({});\r\n    }else{\r\n      setPostData(props.data[postNum]);\r\n    }\r\n  }\r\n  const updateFilterResults = (newData) => {\r\n    setData(newData);\r\n  }\r\n  const resetFilterResults = () => {\r\n    setData(props.data);\r\n  }\r\n  return (\r\n    <div className='grid grid-cols-12 mx-3 min-h-90 relative'>\r\n      <Filter data={props.data} reset={resetFilterResults} update={updateFilterResults}/>\r\n      <PostList data={data} changeDisplayPost={changeDisplayPost}/>\r\n      <Post postData={postData}/>\r\n    </div>\r\n  )\r\n}\r\n","import React , { useState } from 'react'\r\nimport CreatePost from './CreatePost';\r\nimport Homepage from './Homepage';\r\nimport Search from './Search';\r\n\r\nexport default function Body(props) {\r\n  let data = require('../data/posts.json');\r\n  let element = \"\";\r\n  const addItem = (item) => {\r\n    data[getMaxId(data) + 1] = item;\r\n    props.goToSearch();\r\n  }\r\n  const getMaxId = (data) => {\r\n    let maxId = 0;\r\n    Object.keys(data).map((key) => {\r\n      if(parseInt(key) > maxId){\r\n        maxId = parseInt(key);\r\n      }\r\n    })\r\n    return maxId;\r\n  }\r\n  console.log(getMaxId(data));\r\n  if(props.content == 'Search'){\r\n    element = <Search data={data}/>\r\n  }else if(props.content == 'Create'){\r\n    element = <CreatePost add={addItem}/>\r\n  }else{\r\n    element = <Homepage/>\r\n  }\r\n  return (\r\n    <>\r\n      {element}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n  let buttonStart = 8;\r\n  return (\r\n    <div className='header grid grid-cols-12 gap-4 '>\r\n      <h1 className='title my-3'><a style={{cursor:'pointer'}} onClick={props.showHomepage}>App</a></h1>\r\n      <button \r\n        className={`col-start-${buttonStart} bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow my-3`}\r\n        onClick={props.showSearch}\r\n      >\r\n        Search\r\n      </button>\r\n      <button \r\n        className={`col-start-${buttonStart + 2} bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow my-3`}\r\n        onClick={props.showCreate}\r\n      >\r\n        Post\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React , { useState } from 'react';\r\nimport Body from './components/Body';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [content, setContent] = useState(\"Homepage\");\r\n  const showSearch = () => {\r\n    setContent(\"Search\");\r\n  }\r\n  const showCreate = () => {\r\n    setContent(\"Create\");\r\n  }\r\n  const showHomepage = () => {\r\n    setContent(\"Homepage\");\r\n  }\r\n  return (\r\n    <div className=\"App h-screen\">\r\n      <div className=\"h-1-10\">\r\n        <Header showSearch={showSearch} showCreate={showCreate} showHomepage={showHomepage}/>\r\n      </div>\r\n      <div className=\"h-9-10\">\r\n        <Body content={content} goToSearch={showSearch}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}